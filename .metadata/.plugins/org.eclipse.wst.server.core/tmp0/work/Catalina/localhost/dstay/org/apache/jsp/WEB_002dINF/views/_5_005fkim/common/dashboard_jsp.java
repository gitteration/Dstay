/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.45
 * Generated at: 2019-12-19 07:26:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views._5_005fkim.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class dashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/dstay_workspace1/dstayproject/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1576665400215L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("  <meta name=\"description\" content=\"\">\r\n");
      out.write("  <meta name=\"author\" content=\"\">\r\n");
      out.write("\r\n");
      out.write("  <title>D-Store:Admin</title>\r\n");
      out.write("\r\n");
      out.write("<!-- Custom fonts for this template-->\r\n");
      out.write("  <link href=\"resources/assets/5_kim/vendor/fontawesome-free/css/all.min.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("  <link href=\"https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i\" rel=\"stylesheet\">\r\n");
      out.write("  <link rel=\"stylesheet\" type=\"text/css\" href=\"http://api.typolink.co.kr/css?family=THELuxGoB:400\" />\r\n");
      out.write("  <!-- Custom styles for this template-->\r\n");
      out.write("  <link href=\"resources/css/5_kim/sb-admin-2.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/chart.js@2.9.2/dist/Chart.min.js\"></script>\r\n");
      out.write("  \r\n");
      out.write("  <style>\r\n");
      out.write("  \t#content-wrapper table{\r\n");
      out.write("  \t\ttext-align:center;\r\n");
      out.write("  \t}\r\n");
      out.write("  </style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body id=\"page-top\">\r\n");
      out.write("  <!-- Page Wrapper -->\r\n");
      out.write("  <div id=\"wrapper\">\r\n");
      out.write("    \r\n");
      out.write("    <!------------------------------- 네비게이터 인클루드 ----------------------------------->\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "navi-bar.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<script>\r\n");
      out.write("\t<!-- 네비게이터 현재 페이지인 글씨 bold처리-->\r\n");
      out.write("\t\t$(\".dashboardLi\").addClass('active');\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("    <!-- Content Wrapper -->\r\n");
      out.write("    <div id=\"content-wrapper\" class=\"d-flex flex-column\">\r\n");
      out.write("\t  <!--  메인 내용 -->\r\n");
      out.write("      <div id=\"content\">\r\n");
      out.write("        <div class=\"container-fluid\">\r\n");
      out.write("          <br>\r\n");
      out.write("          <h3 class=\"h3 mb-1 text-gray-900\">&nbsp; 대쉬보드 </h3><br>\r\n");
      out.write("          \r\n");
      out.write("          <div class=\"row\">\r\n");
      out.write("            <div class=\"col-lg-6\">\r\n");
      out.write("              <!-----------------------------------------------------  [1 총매출액 통계]---------------------------------------------------------------------------------->\r\n");
      out.write("              <div class=\"card shadow mb-4\">\r\n");
      out.write("              <div class=\"card-header py-3\">\r\n");
      out.write("              \t<span class=\"m-0 font-weight-bold text-primary\">총 매출액</span>\r\n");
      out.write("              </div>\r\n");
      out.write("              <div class=\"card-body\">\r\n");
      out.write("  \r\n");
      out.write("                      <div class=\"chart-area\">\r\n");
      out.write("                        <canvas id=\"myAreaChart\"></canvas>\r\n");
      out.write("                        <script>\r\n");
      out.write("                          Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif';\r\n");
      out.write("                          Chart.defaults.global.defaultFontColor = '#858796';\r\n");
      out.write("  \r\n");
      out.write("                        function number_format(number, decimals, dec_point, thousands_sep) {\r\n");
      out.write("                          // *     example: number_format(1234.56, 2, ',', ' ');\r\n");
      out.write("                          // *     return: '1 234,56'\r\n");
      out.write("                          number = (number + '').replace(',', '').replace(' ', '');\r\n");
      out.write("                          var n = !isFinite(+number) ? 0 : +number,\r\n");
      out.write("                            prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\r\n");
      out.write("                            sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,\r\n");
      out.write("                            dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\r\n");
      out.write("                            s = '',\r\n");
      out.write("                            toFixedFix = function(n, prec) {\r\n");
      out.write("                              var k = Math.pow(10, prec);\r\n");
      out.write("                              return '' + Math.round(n * k) / k;\r\n");
      out.write("                            };\r\n");
      out.write("                          // Fix for IE parseFloat(0.55).toFixed(0) = 0;\r\n");
      out.write("                          s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');\r\n");
      out.write("                          if (s[0].length > 3) {\r\n");
      out.write("                            s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\r\n");
      out.write("                          }\r\n");
      out.write("                          if ((s[1] || '').length < prec) {\r\n");
      out.write("                            s[1] = s[1] || '';\r\n");
      out.write("                            s[1] += new Array(prec - s[1].length + 1).join('0');\r\n");
      out.write("                          }\r\n");
      out.write("                          return s.join(dec);\r\n");
      out.write("                        }\r\n");
      out.write("  \r\n");
      out.write("                        // Area Chart Example\r\n");
      out.write("                        var ctx = document.getElementById(\"myAreaChart\");\r\n");
      out.write("                        var myLineChart = new Chart(ctx, {\r\n");
      out.write("                          type: 'line',\r\n");
      out.write("                          data: {\r\n");
      out.write("                            labels: [\"1월\", \"2월\", \"3월\", \"4월\", \"5월\", \"6월\", \"7월\", \"8월\", \"9월\", \"10월\", \"11월\", \"12월\"],\r\n");
      out.write("                            datasets: [{\r\n");
      out.write("                              label: \"총 매출액\",\r\n");
      out.write("                              lineTension: 0.3,\r\n");
      out.write("                              backgroundColor: \"rgba(78, 115, 223, 0.05)\",\r\n");
      out.write("                              borderColor: \"rgba(78, 115, 223, 1)\",\r\n");
      out.write("                              pointRadius: 3,\r\n");
      out.write("                              pointBackgroundColor: \"rgba(78, 115, 223, 1)\",\r\n");
      out.write("                              pointBorderColor: \"rgba(78, 115, 223, 1)\",\r\n");
      out.write("                              pointHoverRadius: 3,\r\n");
      out.write("                              pointHoverBackgroundColor: \"rgba(78, 115, 223, 1)\",\r\n");
      out.write("                              pointHoverBorderColor: \"rgba(78, 115, 223, 1)\",\r\n");
      out.write("                              pointHitRadius: 10,\r\n");
      out.write("                              pointBorderWidth: 2,\r\n");
      out.write("                              data: [660000, 5520, 647200.66, 15000, 31000, 80000, 990010, 362000, 90000, 70000, 25000, 40000],\r\n");
      out.write("                              // data 변경\r\n");
      out.write("                            }],\r\n");
      out.write("                          },\r\n");
      out.write("                          options: {\r\n");
      out.write("                            maintainAspectRatio: false,\r\n");
      out.write("                            layout: {\r\n");
      out.write("                              padding: {\r\n");
      out.write("                                left: 10,\r\n");
      out.write("                                right: 25,\r\n");
      out.write("                                top: 25,\r\n");
      out.write("                                bottom: 0\r\n");
      out.write("                              }\r\n");
      out.write("                            },\r\n");
      out.write("                            scales: {\r\n");
      out.write("                              xAxes: [{\r\n");
      out.write("                                time: {\r\n");
      out.write("                                  unit: 'date'\r\n");
      out.write("                                },\r\n");
      out.write("                                gridLines: {\r\n");
      out.write("                                  display: false,\r\n");
      out.write("                                  drawBorder: false\r\n");
      out.write("                                },\r\n");
      out.write("                                ticks: {\r\n");
      out.write("                                  maxTicksLimit: 7\r\n");
      out.write("                                }\r\n");
      out.write("                              }],\r\n");
      out.write("                              yAxes: [{\r\n");
      out.write("                                ticks: {\r\n");
      out.write("                                  maxTicksLimit: 5,\r\n");
      out.write("                                  padding: 10,\r\n");
      out.write("                                  // Include a dollar sign in the ticks\r\n");
      out.write("                                  callback: function(value, index, values) {\r\n");
      out.write("                                    return number_format(value) + '￦';\r\n");
      out.write("                                  }\r\n");
      out.write("                                },\r\n");
      out.write("                                gridLines: {\r\n");
      out.write("                                  color: \"rgb(234, 236, 244)\",\r\n");
      out.write("                                  zeroLineColor: \"rgb(234, 236, 244)\",\r\n");
      out.write("                                  drawBorder: false,\r\n");
      out.write("                                  borderDash: [2],\r\n");
      out.write("                                  zeroLineBorderDash: [2]\r\n");
      out.write("                                }\r\n");
      out.write("                              }],\r\n");
      out.write("                            },\r\n");
      out.write("                            legend: {\r\n");
      out.write("                              display: false\r\n");
      out.write("                            },\r\n");
      out.write("                            tooltips: {\r\n");
      out.write("                              backgroundColor: \"rgb(255,255,255)\",\r\n");
      out.write("                              bodyFontColor: \"#858796\",\r\n");
      out.write("                              titleMarginBottom: 10,\r\n");
      out.write("                              titleFontColor: '#6e707e',\r\n");
      out.write("                              titleFontSize: 14,\r\n");
      out.write("                              borderColor: '#dddfeb',\r\n");
      out.write("                              borderWidth: 1,\r\n");
      out.write("                              xPadding: 15,\r\n");
      out.write("                              yPadding: 15,\r\n");
      out.write("                              displayColors: false,\r\n");
      out.write("                              intersect: false,\r\n");
      out.write("                              mode: 'index',\r\n");
      out.write("                              caretPadding: 10,\r\n");
      out.write("                              callbacks: {\r\n");
      out.write("                                label: function(tooltipItem, chart) {\r\n");
      out.write("                                  var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';\r\n");
      out.write("                                  return datasetLabel +\" : \" + number_format(tooltipItem.yLabel) +'원';\r\n");
      out.write("                                }\r\n");
      out.write("                              }\r\n");
      out.write("                            }\r\n");
      out.write("                          }\r\n");
      out.write("                        });\r\n");
      out.write("                        \r\n");
      out.write("                        </script>\r\n");
      out.write("                    </div>\r\n");
      out.write("  \r\n");
      out.write("              </div>\r\n");
      out.write("              \r\n");
      out.write("              </div>\r\n");
      out.write("              <!-----------------------------------------------------  End Of 총매출액 통계 ---------------------------------------------------------------------------------->\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"col-lg-6\">\r\n");
      out.write("              <!-----------------------------------------------------   [2 인기상품 통계] ----------------------------------------------------->\r\n");
      out.write("                <div class=\"card shadow mb-4\">\r\n");
      out.write("                    <div class=\"card-header py-3\">\r\n");
      out.write("\t\t            \t<span class=\"m-0 font-weight-bold text-primary\">인기상품</span>\r\n");
      out.write("\t\t            </div>\r\n");
      out.write("                    \r\n");
      out.write("                    <div class=\"card-body\">\r\n");
      out.write("                       <div class=\"chart-pie pt-4\">\r\n");
      out.write("                        <canvas id=\"myPieChart\"></canvas>\r\n");
      out.write("                       </div>\r\n");
      out.write("                       <div class=\"pt-4\" align=\"center\"> \r\n");
      out.write("                          <span style=\"color: #4e73df; font-weight:900;\">Direct</span> &nbsp;  &nbsp; \r\n");
      out.write("                          <span style=\"color: #1cc88a; font-weight:900;\">Referral</span> &nbsp;  &nbsp; \r\n");
      out.write("                          <span style=\"color: #2c9faf; font-weight:900;\">Social</span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        \r\n");
      out.write("                        <script>\r\n");
      out.write("                          Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif';\r\n");
      out.write("                          Chart.defaults.global.defaultFontColor = '#858796';\r\n");
      out.write("\r\n");
      out.write("                          // Pie Chart Example\r\n");
      out.write("                          var ctx = document.getElementById(\"myPieChart\");\r\n");
      out.write("                          var myPieChart = new Chart(ctx, {\r\n");
      out.write("                            type: 'doughnut',\r\n");
      out.write("                            data: {\r\n");
      out.write("                              labels: [\"Direct\", \"Referral\", \"Social\"],\r\n");
      out.write("                              datasets: [{\r\n");
      out.write("                                data: [55, 30, 15],\r\n");
      out.write("                                backgroundColor: ['#4e73df', '#1cc88a', '#36b9cc'],\r\n");
      out.write("                                hoverBackgroundColor: ['#2e59d9', '#17a673', '#2c9faf'],\r\n");
      out.write("                                hoverBorderColor: \"rgba(234, 236, 244, 1)\",\r\n");
      out.write("                              }],\r\n");
      out.write("                            },\r\n");
      out.write("                            options: {\r\n");
      out.write("                              maintainAspectRatio: false,\r\n");
      out.write("                              tooltips: {\r\n");
      out.write("                                backgroundColor: \"rgb(255,255,255)\",\r\n");
      out.write("                                bodyFontColor: \"#858796\",\r\n");
      out.write("                                borderColor: '#dddfeb',\r\n");
      out.write("                                borderWidth: 1,\r\n");
      out.write("                                xPadding: 15,\r\n");
      out.write("                                yPadding: 15,\r\n");
      out.write("                                displayColors: false,\r\n");
      out.write("                                caretPadding: 10,\r\n");
      out.write("                              },\r\n");
      out.write("                              legend: {\r\n");
      out.write("                                display: false\r\n");
      out.write("                              },\r\n");
      out.write("                              cutoutPercentage: 80,\r\n");
      out.write("                            },\r\n");
      out.write("                          });\r\n");
      out.write("                        \r\n");
      out.write("                        </script>\r\n");
      out.write("                      \r\n");
      out.write("                      </div>\r\n");
      out.write("                  </div>\r\n");
      out.write("                </div>\r\n");
      out.write("              <!-----------------------------------------------------   End of 인기상품 통계 ----------------------------------------------------->\r\n");
      out.write("            </div>\r\n");
      out.write("          \r\n");
      out.write("          \r\n");
      out.write("          <!-----------------------------------------------------  [3 상품현황 카드] ----------------------------------------------------->\r\n");
      out.write("          <div class=\"card shadow mb-4\">\r\n");
      out.write("                <div class=\"card-header py-3\">\r\n");
      out.write("                  <span class=\"m-0 font-weight-bold text-primary\">물품 상태</span>\r\n");
      out.write("                  <a style=\"float:right;\"  href=\"adminProductList.do\">모든 물품조회 →</a>\r\n");
      out.write("                  \r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"card-body\">\r\n");
      out.write("                  <table class=\"table table-bordered\" cellspacing=\"0\">\r\n");
      out.write("                    <tr>\r\n");
      out.write("                      <th>전체 등록된 물품</th>\r\n");
      out.write("                      <th>판매중인 물품</th>\r\n");
      out.write("                      <th>품절 물품</th>\r\n");
      out.write("                      <th>블라인드중인 물품</th>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                      <td>25개</td>\r\n");
      out.write("                      <td>23개</td>\r\n");
      out.write("                      <td><label style=\"color:red;\">1개</label></td>\r\n");
      out.write("                      <td>1개</td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                  </table>\r\n");
      out.write("                </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <!-----------------------------------------------------  End of 상품현황 카드 ----------------------------------------------------->\r\n");
      out.write("          <!-----------------------------------------------------  [4 구매내역 카드] ----------------------------------------------------->\r\n");
      out.write("          <div class=\"card shadow mb-4\">\r\n");
      out.write("              <div class=\"card-header py-3\">\r\n");
      out.write("                  <span class=\"m-0 font-weight-bold text-primary\">구매내역</span>\r\n");
      out.write("                  <a style=\"float:right;\"  href=\"adminPurchaseList.do\">최근 구매내역 →</a>\r\n");
      out.write("              </div>\r\n");
      out.write("              \r\n");
      out.write("              <div class=\"card-body\">\r\n");
      out.write("                  <table class=\"table table-bordered\" cellspacing=\"0\">\r\n");
      out.write("                      <tr>\r\n");
      out.write("                          <th>구매번호</th>\r\n");
      out.write("                          <th>구매상품명</th>\r\n");
      out.write("                          <th>결제수단</th>\r\n");
      out.write("                          <th>결제확인날짜</th>\r\n");
      out.write("                          <th>결제금액</th>\r\n");
      out.write("                          <th>송장번호</th>\r\n");
      out.write("                          <th>환불요청여부</th>\r\n");
      out.write("                          <th>환불처리완료날짜</th>\r\n");
      out.write("                      </tr>\r\n");
      out.write("                      <tr>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                        <td></td>\r\n");
      out.write("                      </tr>\r\n");
      out.write("                    </table>\r\n");
      out.write("              </div>\r\n");
      out.write("\r\n");
      out.write("          </div>\r\n");
      out.write("          <!-----------------------------------------------------  End of 구매내역 카드 ----------------------------------------------------->\r\n");
      out.write("          \r\n");
      out.write("        </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\t</div>\r\n");
      out.write("      </div>\r\n");
      out.write("      <!-- End of 메인 내용 -->\r\n");
      out.write("\t\t\r\n");
      out.write("\t  <!-----------------------------------------------------  [5 footer]  ----------------------------------------------------->\r\n");
      out.write("      ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- End of Content Wrapper -->\r\n");
      out.write("\r\n");
      out.write("  </div>\r\n");
      out.write("  <!-- End of Page Wrapper -->\r\n");
      out.write("\r\n");
      out.write("  <!-- Scroll to Top Button-->\r\n");
      out.write("  <a class=\"scroll-to-top rounded\" href=\"#page-top\">\r\n");
      out.write("    <i class=\"fas fa-angle-up\"></i>\r\n");
      out.write("  </a>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  <!-- Bootstrap core JavaScript-->\r\n");
      out.write("  <script src=\"resources/assets/5_kim/vendor/jquery/jquery.min.js\"></script>\r\n");
      out.write("  <script src=\"resources/assets/5_kim/vendor/bootstrap/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("  <!-- Core plugin JavaScript-->\r\n");
      out.write("  <script src=\"resources/assets/5_kim/vendor/jquery-easing/jquery.easing.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("  <!-- Custom scripts for all pages-->\r\n");
      out.write("  <script src=\"js/sb-admin-2.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
